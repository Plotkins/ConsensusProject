// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConsensusProject.Messages
{

    /// <summary>Holder for reflection information generated from Messages.proto</summary>
    public static partial class MessagesReflection
    {

        #region Descriptor
        /// <summary>File descriptor for Messages.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static MessagesReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg5NZXNzYWdlcy5wcm90bxIEbWFpbiJTCglQcm9jZXNzSWQSDAoEaG9zdBgB",
                  "IAEoCRIMCgRwb3J0GAIgASgFEg0KBW93bmVyGAMgASgJEg0KBWluZGV4GAQg",
                  "ASgFEgwKBHJhbmsYBSABKAUiQgoFVmFsdWUSDwoHZGVmaW5lZBgBIAEoCBIJ",
                  "CgF2GAIgASgFEh0KAnR4GAMgASgLMhEubWFpbi5UcmFuc2FjdGlvbiJLCgtU",
                  "cmFuc2FjdGlvbhIMCgR0eElkGAEgASgJEg4KBnNyY0FjYxgCIAEoCRIOCgZk",
                  "c3RBY2MYAyABKAkSDgoGYW1vdW50GAQgASgBIi8KD0FwcFJlZ2lzdHJhdGlv",
                  "bhINCgVvd25lchgBIAEoCRINCgVpbmRleBgCIAEoBSJMCgpBcHBQcm9wb3Nl",
                  "EhoKBXZhbHVlGAEgASgLMgsubWFpbi5WYWx1ZRIiCglwcm9jZXNzZXMYAiAD",
                  "KAsyDy5tYWluLlByb2Nlc3NJZCInCglBcHBEZWNpZGUSGgoFdmFsdWUYASAB",
                  "KAsyCy5tYWluLlZhbHVlIicKCVVjUHJvcG9zZRIaCgV2YWx1ZRgBIAEoCzIL",
                  "Lm1haW4uVmFsdWUiJgoIVWNEZWNpZGUSGgoFdmFsdWUYASABKAsyCy5tYWlu",
                  "LlZhbHVlIgkKB0VwQWJvcnQiTAoJRXBBYm9ydGVkEgsKA2V0cxgBIAEoBRIW",
                  "Cg52YWx1ZVRpbWVzdGFtcBgCIAEoBRIaCgV2YWx1ZRgDIAEoCzILLm1haW4u",
                  "VmFsdWUiJwoJRXBQcm9wb3NlEhoKBXZhbHVlGAEgASgLMgsubWFpbi5WYWx1",
                  "ZSIzCghFcERlY2lkZRILCgNldHMYASABKAUSGgoFdmFsdWUYAiABKAsyCy5t",
                  "YWluLlZhbHVlIgkKB0VwUmVhZF8iPgoIRXBTdGF0ZV8SFgoOdmFsdWVUaW1l",
                  "c3RhbXAYASABKAUSGgoFdmFsdWUYAiABKAsyCy5tYWluLlZhbHVlIiYKCEVw",
                  "V3JpdGVfEhoKBXZhbHVlGAEgASgLMgsubWFpbi5WYWx1ZSILCglFcEFjY2Vw",
                  "dF8iKAoKRXBEZWNpZGVkXxIaCgV2YWx1ZRgBIAEoCzILLm1haW4uVmFsdWUi",
                  "CQoHRWNOYWNrXyJICgxFY1N0YXJ0RXBvY2gSFAoMbmV3VGltZXN0YW1wGAEg",
                  "ASgFEiIKCW5ld0xlYWRlchgCIAEoCzIPLm1haW4uUHJvY2Vzc0lkIiAKC0Vj",
                  "TmV3RXBvY2hfEhEKCXRpbWVzdGFtcBgBIAEoBSIuCgxCZWJCcm9hZGNhc3QS",
                  "HgoHbWVzc2FnZRgBIAEoCzINLm1haW4uTWVzc2FnZSJNCgpCZWJEZWxpdmVy",
                  "Eh4KB21lc3NhZ2UYASABKAsyDS5tYWluLk1lc3NhZ2USHwoGc2VuZGVyGAIg",
                  "ASgLMg8ubWFpbi5Qcm9jZXNzSWQiDAoKRWxkVGltZW91dCIsCghFbGRUcnVz",
                  "dBIgCgdwcm9jZXNzGAEgASgLMg8ubWFpbi5Qcm9jZXNzSWQiDQoLRXBmZFRp",
                  "bWVvdXQiFwoVRXBmZEhlYXJ0YmVhdFJlcXVlc3RfIhUKE0VwZmRIZWFydGJl",
                  "YXRSZXBseV8iLwoLRXBmZFN1c3BlY3QSIAoHcHJvY2VzcxgBIAEoCzIPLm1h",
                  "aW4uUHJvY2Vzc0lkIi8KC0VwZmRSZXN0b3JlEiAKB3Byb2Nlc3MYASABKAsy",
                  "Dy5tYWluLlByb2Nlc3NJZCJOCgZQbFNlbmQSJAoLZGVzdGluYXRpb24YASAB",
                  "KAsyDy5tYWluLlByb2Nlc3NJZBIeCgdtZXNzYWdlGAIgASgLMg0ubWFpbi5N",
                  "ZXNzYWdlIkwKCVBsRGVsaXZlchIfCgZzZW5kZXIYASABKAsyDy5tYWluLlBy",
                  "b2Nlc3NJZBIeCgdtZXNzYWdlGAIgASgLMg0ubWFpbi5NZXNzYWdlImEKDk5l",
                  "dHdvcmtNZXNzYWdlEhIKCnNlbmRlckhvc3QYASABKAkSGwoTc2VuZGVyTGlz",
                  "dGVuaW5nUG9ydBgCIAEoBRIeCgdtZXNzYWdlGAMgASgLMg0ubWFpbi5NZXNz",
                  "YWdlIscNCgdNZXNzYWdlEiAKBHR5cGUYASABKA4yEi5tYWluLk1lc3NhZ2Uu",
                  "VHlwZRITCgttZXNzYWdlVXVpZBgCIAEoCRIVCg1hYnN0cmFjdGlvbklkGAMg",
                  "ASgJEhAKCHN5c3RlbUlkGAQgASgJEiwKDm5ldHdvcmtNZXNzYWdlGAUgASgL",
                  "MhQubWFpbi5OZXR3b3JrTWVzc2FnZRIuCg9hcHBSZWdpc3RyYXRpb24YBiAB",
                  "KAsyFS5tYWluLkFwcFJlZ2lzdHJhdGlvbhIkCgphcHBQcm9wb3NlGAcgASgL",
                  "MhAubWFpbi5BcHBQcm9wb3NlEiIKCWFwcERlY2lkZRgIIAEoCzIPLm1haW4u",
                  "QXBwRGVjaWRlEiAKCHVjRGVjaWRlGAogASgLMg4ubWFpbi5VY0RlY2lkZRIi",
                  "Cgl1Y1Byb3Bvc2UYCyABKAsyDy5tYWluLlVjUHJvcG9zZRIeCgdlcEFib3J0",
                  "GBQgASgLMg0ubWFpbi5FcEFib3J0EiIKCWVwQWJvcnRlZBgVIAEoCzIPLm1h",
                  "aW4uRXBBYm9ydGVkEiIKCWVwQWNjZXB0XxgWIAEoCzIPLm1haW4uRXBBY2Nl",
                  "cHRfEiAKCGVwRGVjaWRlGBcgASgLMg4ubWFpbi5FcERlY2lkZRIkCgplcERl",
                  "Y2lkZWRfGBggASgLMhAubWFpbi5FcERlY2lkZWRfEiIKCWVwUHJvcG9zZRgZ",
                  "IAEoCzIPLm1haW4uRXBQcm9wb3NlEh4KB2VwUmVhZF8YGiABKAsyDS5tYWlu",
                  "LkVwUmVhZF8SIAoIZXBTdGF0ZV8YGyABKAsyDi5tYWluLkVwU3RhdGVfEiAK",
                  "CGVwV3JpdGVfGBwgASgLMg4ubWFpbi5FcFdyaXRlXxIeCgdlY05hY2tfGB8g",
                  "ASgLMg0ubWFpbi5FY05hY2tfEiYKC2VjTmV3RXBvY2hfGCAgASgLMhEubWFp",
                  "bi5FY05ld0Vwb2NoXxIoCgxlY1N0YXJ0RXBvY2gYISABKAsyEi5tYWluLkVj",
                  "U3RhcnRFcG9jaBIoCgxiZWJCcm9hZGNhc3QYKCABKAsyEi5tYWluLkJlYkJy",
                  "b2FkY2FzdBIkCgpiZWJEZWxpdmVyGCkgASgLMhAubWFpbi5CZWJEZWxpdmVy",
                  "EiQKCmVsZFRpbWVvdXQYMiABKAsyEC5tYWluLkVsZFRpbWVvdXQSIAoIZWxk",
                  "VHJ1c3QYMyABKAsyDi5tYWluLkVsZFRydXN0EiYKC2VwZmRUaW1lb3V0GDwg",
                  "ASgLMhEubWFpbi5FcGZkVGltZW91dBI6ChVlcGZkSGVhcnRiZWF0UmVxdWVz",
                  "dF8YPSABKAsyGy5tYWluLkVwZmRIZWFydGJlYXRSZXF1ZXN0XxI2ChNlcGZk",
                  "SGVhcnRiZWF0UmVwbHlfGD4gASgLMhkubWFpbi5FcGZkSGVhcnRiZWF0UmVw",
                  "bHlfEiYKC2VwZmRTdXNwZWN0GD8gASgLMhEubWFpbi5FcGZkU3VzcGVjdBIm",
                  "CgtlcGZkUmVzdG9yZRhAIAEoCzIRLm1haW4uRXBmZFJlc3RvcmUSIgoJcGxE",
                  "ZWxpdmVyGEYgASgLMg8ubWFpbi5QbERlbGl2ZXISHAoGcGxTZW5kGEcgASgL",
                  "MgwubWFpbi5QbFNlbmQi/QMKBFR5cGUSEwoPTkVUV09SS19NRVNTQUdFEAAS",
                  "FAoQQVBQX1JFR0lTVFJBVElPThAFEg8KC0FQUF9QUk9QT1NFEAYSDgoKQVBQ",
                  "X0RFQ0lERRAHEg0KCVVDX0RFQ0lERRAKEg4KClVDX1BST1BPU0UQCxIMCghF",
                  "UF9BQk9SVBAUEg4KCkVQX0FCT1JURUQQFRIOCgpFUF9BQ0NFUFRfEBYSDQoJ",
                  "RVBfREVDSURFEBcSDwoLRVBfREVDSURFRF8QGBIOCgpFUF9QUk9QT1NFEBkS",
                  "DAoIRVBfUkVBRF8QGhINCglFUF9TVEFURV8QGxINCglFUF9XUklURV8QHBIM",
                  "CghFQ19OQUNLXxAeEhEKDUVDX05FV19FUE9DSF8QHxISCg5FQ19TVEFSVF9F",
                  "UE9DSBAgEhEKDUJFQl9CUk9BRENBU1QQKBIPCgtCRUJfREVMSVZFUhApEg8K",
                  "C0VMRF9USU1FT1VUEDISDQoJRUxEX1RSVVNUEDMSEAoMRVBGRF9USU1FT1VU",
                  "EDwSGgoWRVBGRF9IRUFSVEJFQVRfUkVRVUVTVBA9EhgKFEVQRkRfSEVBUlRC",
                  "RUFUX1JFUExZED4SEAoMRVBGRF9TVVNQRUNUED8SEAoMRVBGRF9SRVNUT1JF",
                  "EEASDgoKUExfREVMSVZFUhBGEgsKB1BMX1NFTkQQR2IGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.ProcessId), global::ConsensusProject.Messages.ProcessId.Parser, new[]{ "Host", "Port", "Owner", "Index", "Rank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.Value), global::ConsensusProject.Messages.Value.Parser, new[]{ "Defined", "V", "Tx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.Transaction), global::ConsensusProject.Messages.Transaction.Parser, new[]{ "TxId", "SrcAcc", "DstAcc", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.AppRegistration), global::ConsensusProject.Messages.AppRegistration.Parser, new[]{ "Owner", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.AppPropose), global::ConsensusProject.Messages.AppPropose.Parser, new[]{ "Value", "Processes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.AppDecide), global::ConsensusProject.Messages.AppDecide.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.UcPropose), global::ConsensusProject.Messages.UcPropose.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.UcDecide), global::ConsensusProject.Messages.UcDecide.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpAbort), global::ConsensusProject.Messages.EpAbort.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpAborted), global::ConsensusProject.Messages.EpAborted.Parser, new[]{ "Ets", "ValueTimestamp", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpPropose), global::ConsensusProject.Messages.EpPropose.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpDecide), global::ConsensusProject.Messages.EpDecide.Parser, new[]{ "Ets", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpRead_), global::ConsensusProject.Messages.EpRead_.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpState_), global::ConsensusProject.Messages.EpState_.Parser, new[]{ "ValueTimestamp", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpWrite_), global::ConsensusProject.Messages.EpWrite_.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpAccept_), global::ConsensusProject.Messages.EpAccept_.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpDecided_), global::ConsensusProject.Messages.EpDecided_.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EcNack_), global::ConsensusProject.Messages.EcNack_.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EcStartEpoch), global::ConsensusProject.Messages.EcStartEpoch.Parser, new[]{ "NewTimestamp", "NewLeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EcNewEpoch_), global::ConsensusProject.Messages.EcNewEpoch_.Parser, new[]{ "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.BebBroadcast), global::ConsensusProject.Messages.BebBroadcast.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.BebDeliver), global::ConsensusProject.Messages.BebDeliver.Parser, new[]{ "Message", "Sender" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EldTimeout), global::ConsensusProject.Messages.EldTimeout.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EldTrust), global::ConsensusProject.Messages.EldTrust.Parser, new[]{ "Process" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpfdTimeout), global::ConsensusProject.Messages.EpfdTimeout.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpfdHeartbeatRequest_), global::ConsensusProject.Messages.EpfdHeartbeatRequest_.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpfdHeartbeatReply_), global::ConsensusProject.Messages.EpfdHeartbeatReply_.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpfdSuspect), global::ConsensusProject.Messages.EpfdSuspect.Parser, new[]{ "Process" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.EpfdRestore), global::ConsensusProject.Messages.EpfdRestore.Parser, new[]{ "Process" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.PlSend), global::ConsensusProject.Messages.PlSend.Parser, new[]{ "Destination", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.PlDeliver), global::ConsensusProject.Messages.PlDeliver.Parser, new[]{ "Sender", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.NetworkMessage), global::ConsensusProject.Messages.NetworkMessage.Parser, new[]{ "SenderHost", "SenderListeningPort", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConsensusProject.Messages.Message), global::ConsensusProject.Messages.Message.Parser, new[]{ "Type", "MessageUuid", "AbstractionId", "SystemId", "NetworkMessage", "AppRegistration", "AppPropose", "AppDecide", "UcDecide", "UcPropose", "EpAbort", "EpAborted", "EpAccept", "EpDecide", "EpDecided", "EpPropose", "EpRead", "EpState", "EpWrite", "EcNack", "EcNewEpoch", "EcStartEpoch", "BebBroadcast", "BebDeliver", "EldTimeout", "EldTrust", "EpfdTimeout", "EpfdHeartbeatRequest", "EpfdHeartbeatReply", "EpfdSuspect", "EpfdRestore", "PlDeliver", "PlSend" }, null, new[]{ typeof(global::ConsensusProject.Messages.Message.Types.Type) }, null)
                }));
        }
        #endregion

    }
    #region Messages
    /// <summary>
    /// Data structures
    /// </summary>
    public sealed partial class ProcessId : pb::IMessage<ProcessId>
    {
        private static readonly pb::MessageParser<ProcessId> _parser = new pb::MessageParser<ProcessId>(() => new ProcessId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessId()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessId(ProcessId other) : this()
        {
            host_ = other.host_;
            port_ = other.port_;
            owner_ = other.owner_;
            index_ = other.index_;
            rank_ = other.rank_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessId Clone()
        {
            return new ProcessId(this);
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 1;
        private string host_ = "";
        /// <summary>
        /// String containing either doConsensusProject.Messages name  or IP (most likely)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Host
        {
            get { return host_; }
            set
            {
                host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private int port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Port
        {
            get { return port_; }
            set
            {
                port_ = value;
            }
        }

        /// <summary>Field number for the "owner" field.</summary>
        public const int OwnerFieldNumber = 3;
        private string owner_ = "";
        /// <summary>
        /// Short alias or acronym of the owner of the process
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Owner
        {
            get { return owner_; }
            set
            {
                owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 4;
        private int index_;
        /// <summary>
        /// Process index within the owner's processes. Must be 1, 2, or 3
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index
        {
            get { return index_; }
            set
            {
                index_ = value;
            }
        }

        /// <summary>Field number for the "rank" field.</summary>
        public const int RankFieldNumber = 5;
        private int rank_;
        /// <summary>
        /// Populated by the hub when initiating consensus with AppPropose. Do not calculate your own rank,
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rank
        {
            get { return rank_; }
            set
            {
                rank_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ProcessId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessId other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Host != other.Host) return false;
            if (Port != other.Port) return false;
            if (Owner != other.Owner) return false;
            if (Index != other.Index) return false;
            if (Rank != other.Rank) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Host.Length != 0) hash ^= Host.GetHashCode();
            if (Port != 0) hash ^= Port.GetHashCode();
            if (Owner.Length != 0) hash ^= Owner.GetHashCode();
            if (Index != 0) hash ^= Index.GetHashCode();
            if (Rank != 0) hash ^= Rank.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Host.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Host);
            }
            if (Port != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Port);
            }
            if (Owner.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Owner);
            }
            if (Index != 0)
            {
                output.WriteRawTag(32);
                output.WriteInt32(Index);
            }
            if (Rank != 0)
            {
                output.WriteRawTag(40);
                output.WriteInt32(Rank);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Host.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
            }
            if (Port != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
            }
            if (Owner.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
            }
            if (Index != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
            }
            if (Rank != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessId other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Host.Length != 0)
            {
                Host = other.Host;
            }
            if (other.Port != 0)
            {
                Port = other.Port;
            }
            if (other.Owner.Length != 0)
            {
                Owner = other.Owner;
            }
            if (other.Index != 0)
            {
                Index = other.Index;
            }
            if (other.Rank != 0)
            {
                Rank = other.Rank;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Host = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Port = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            Owner = input.ReadString();
                            break;
                        }
                    case 32:
                        {
                            Index = input.ReadInt32();
                            break;
                        }
                    case 40:
                        {
                            Rank = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Needed to model the undefined value that appears in the textbook
    /// </summary>
    public sealed partial class Value : pb::IMessage<Value>
    {
        private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Value> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value(Value other) : this()
        {
            defined_ = other.defined_;
            v_ = other.v_;
            tx_ = other.tx_ != null ? other.tx_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value Clone()
        {
            return new Value(this);
        }

        /// <summary>Field number for the "defined" field.</summary>
        public const int DefinedFieldNumber = 1;
        private bool defined_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Defined
        {
            get { return defined_; }
            set
            {
                defined_ = value;
            }
        }

        /// <summary>Field number for the "v" field.</summary>
        public const int VFieldNumber = 2;
        private int v_;
        /// <summary>
        /// Value; ignore if defined == false
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int V
        {
            get { return v_; }
            set
            {
                v_ = value;
            }
        }

        /// <summary>Field number for the "tx" field.</summary>
        public const int TxFieldNumber = 3;
        private global::ConsensusProject.Messages.Transaction tx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Transaction Tx
        {
            get { return tx_; }
            set
            {
                tx_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Value);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Value other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Defined != other.Defined) return false;
            if (V != other.V) return false;
            if (!object.Equals(Tx, other.Tx)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Defined != false) hash ^= Defined.GetHashCode();
            if (V != 0) hash ^= V.GetHashCode();
            if (tx_ != null) hash ^= Tx.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Defined != false)
            {
                output.WriteRawTag(8);
                output.WriteBool(Defined);
            }
            if (V != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(V);
            }
            if (tx_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Tx);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Defined != false)
            {
                size += 1 + 1;
            }
            if (V != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(V);
            }
            if (tx_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tx);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Value other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Defined != false)
            {
                Defined = other.Defined;
            }
            if (other.V != 0)
            {
                V = other.V;
            }
            if (other.tx_ != null)
            {
                if (tx_ == null)
                {
                    tx_ = new global::ConsensusProject.Messages.Transaction();
                }
                Tx.MergeFrom(other.Tx);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Defined = input.ReadBool();
                            break;
                        }
                    case 16:
                        {
                            V = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            if (tx_ == null)
                            {
                                tx_ = new global::ConsensusProject.Messages.Transaction();
                            }
                            input.ReadMessage(tx_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Transaction : pb::IMessage<Transaction>
    {
        private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transaction()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transaction(Transaction other) : this()
        {
            txId_ = other.txId_;
            srcAcc_ = other.srcAcc_;
            dstAcc_ = other.dstAcc_;
            amount_ = other.amount_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transaction Clone()
        {
            return new Transaction(this);
        }

        /// <summary>Field number for the "txId" field.</summary>
        public const int TxIdFieldNumber = 1;
        private string txId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TxId
        {
            get { return txId_; }
            set
            {
                txId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "srcAcc" field.</summary>
        public const int SrcAccFieldNumber = 2;
        private string srcAcc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SrcAcc
        {
            get { return srcAcc_; }
            set
            {
                srcAcc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "dstAcc" field.</summary>
        public const int DstAccFieldNumber = 3;
        private string dstAcc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DstAcc
        {
            get { return dstAcc_; }
            set
            {
                dstAcc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 4;
        private double amount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Amount
        {
            get { return amount_; }
            set
            {
                amount_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Transaction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Transaction other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TxId != other.TxId) return false;
            if (SrcAcc != other.SrcAcc) return false;
            if (DstAcc != other.DstAcc) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Amount, other.Amount)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TxId.Length != 0) hash ^= TxId.GetHashCode();
            if (SrcAcc.Length != 0) hash ^= SrcAcc.GetHashCode();
            if (DstAcc.Length != 0) hash ^= DstAcc.GetHashCode();
            if (Amount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Amount);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (TxId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TxId);
            }
            if (SrcAcc.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(SrcAcc);
            }
            if (DstAcc.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(DstAcc);
            }
            if (Amount != 0D)
            {
                output.WriteRawTag(33);
                output.WriteDouble(Amount);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (TxId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TxId);
            }
            if (SrcAcc.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcAcc);
            }
            if (DstAcc.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DstAcc);
            }
            if (Amount != 0D)
            {
                size += 1 + 8;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Transaction other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TxId.Length != 0)
            {
                TxId = other.TxId;
            }
            if (other.SrcAcc.Length != 0)
            {
                SrcAcc = other.SrcAcc;
            }
            if (other.DstAcc.Length != 0)
            {
                DstAcc = other.DstAcc;
            }
            if (other.Amount != 0D)
            {
                Amount = other.Amount;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            TxId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            SrcAcc = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            DstAcc = input.ReadString();
                            break;
                        }
                    case 33:
                        {
                            Amount = input.ReadDouble();
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Messages and events
    /// APP
    /// </summary>
    public sealed partial class AppRegistration : pb::IMessage<AppRegistration>
    {
        private static readonly pb::MessageParser<AppRegistration> _parser = new pb::MessageParser<AppRegistration>(() => new AppRegistration());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppRegistration> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppRegistration()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppRegistration(AppRegistration other) : this()
        {
            owner_ = other.owner_;
            index_ = other.index_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppRegistration Clone()
        {
            return new AppRegistration(this);
        }

        /// <summary>Field number for the "owner" field.</summary>
        public const int OwnerFieldNumber = 1;
        private string owner_ = "";
        /// <summary>
        /// Some short alias
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Owner
        {
            get { return owner_; }
            set
            {
                owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 2;
        private int index_;
        /// <summary>
        /// Process index: must be 1, 2, or 3
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index
        {
            get { return index_; }
            set
            {
                index_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as AppRegistration);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppRegistration other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Owner != other.Owner) return false;
            if (Index != other.Index) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Owner.Length != 0) hash ^= Owner.GetHashCode();
            if (Index != 0) hash ^= Index.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Owner.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Owner);
            }
            if (Index != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Index);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Owner.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
            }
            if (Index != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppRegistration other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Owner.Length != 0)
            {
                Owner = other.Owner;
            }
            if (other.Index != 0)
            {
                Index = other.Index;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Owner = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Index = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Received from the HUB as Message(NetworkMessage(Message(AppPropose))). Should be handled by the
    /// </summary>
    public sealed partial class AppPropose : pb::IMessage<AppPropose>
    {
        private static readonly pb::MessageParser<AppPropose> _parser = new pb::MessageParser<AppPropose>(() => new AppPropose());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppPropose> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppPropose()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppPropose(AppPropose other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            processes_ = other.processes_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppPropose Clone()
        {
            return new AppPropose(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        /// <summary>
        /// application layer. No abstractions other than APP should be active before this is received,
        /// because this will define the PI set Value value = 1; // Random value chosen by the HUB
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        /// <summary>Field number for the "processes" field.</summary>
        public const int ProcessesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::ConsensusProject.Messages.ProcessId> _repeated_processes_codec
            = pb::FieldCodec.ForMessage(18, global::ConsensusProject.Messages.ProcessId.Parser);
        private readonly pbc::RepeatedField<global::ConsensusProject.Messages.ProcessId> processes_ = new pbc::RepeatedField<global::ConsensusProject.Messages.ProcessId>();
        /// <summary>
        /// List of processes involved in the consensus algorithm (PI set)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::ConsensusProject.Messages.ProcessId> Processes
        {
            get { return processes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as AppPropose);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppPropose other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            if (!processes_.Equals(other.processes_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            hash ^= processes_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            processes_.WriteTo(output, _repeated_processes_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            size += processes_.CalculateSize(_repeated_processes_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppPropose other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            processes_.Add(other.processes_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                    case 18:
                        {
                            processes_.AddEntriesFrom(input, _repeated_processes_codec);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Upon receiving UcDecide, send to HUB as Message(NetworkMessage(Message(AppDecide)))
    /// </summary>
    public sealed partial class AppDecide : pb::IMessage<AppDecide>
    {
        private static readonly pb::MessageParser<AppDecide> _parser = new pb::MessageParser<AppDecide>(() => new AppDecide());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppDecide> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppDecide()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppDecide(AppDecide other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppDecide Clone()
        {
            return new AppDecide(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        /// <summary>
        /// Decided value taken from UcDecide
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as AppDecide);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppDecide other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppDecide other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// UC
    /// In the Init event or constructor, initialize l (leader) with the max-rank process in PI
    /// </summary>
    public sealed partial class UcPropose : pb::IMessage<UcPropose>
    {
        private static readonly pb::MessageParser<UcPropose> _parser = new pb::MessageParser<UcPropose>(() => new UcPropose());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UcPropose> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcPropose()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcPropose(UcPropose other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcPropose Clone()
        {
            return new UcPropose(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as UcPropose);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UcPropose other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UcPropose other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class UcDecide : pb::IMessage<UcDecide>
    {
        private static readonly pb::MessageParser<UcDecide> _parser = new pb::MessageParser<UcDecide>(() => new UcDecide());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UcDecide> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcDecide()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcDecide(UcDecide other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UcDecide Clone()
        {
            return new UcDecide(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as UcDecide);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UcDecide other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UcDecide other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// EP
    /// </summary>
    public sealed partial class EpAbort : pb::IMessage<EpAbort>
    {
        private static readonly pb::MessageParser<EpAbort> _parser = new pb::MessageParser<EpAbort>(() => new EpAbort());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpAbort> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAbort()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAbort(EpAbort other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAbort Clone()
        {
            return new EpAbort(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpAbort);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpAbort other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpAbort other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpAborted : pb::IMessage<EpAborted>
    {
        private static readonly pb::MessageParser<EpAborted> _parser = new pb::MessageParser<EpAborted>(() => new EpAborted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpAborted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAborted()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAborted(EpAborted other) : this()
        {
            ets_ = other.ets_;
            valueTimestamp_ = other.valueTimestamp_;
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAborted Clone()
        {
            return new EpAborted(this);
        }

        /// <summary>Field number for the "ets" field.</summary>
        public const int EtsFieldNumber = 1;
        private int ets_;
        /// <summary>
        /// Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ets
        {
            get { return ets_; }
            set
            {
                ets_ = value;
            }
        }

        /// <summary>Field number for the "valueTimestamp" field.</summary>
        public const int ValueTimestampFieldNumber = 2;
        private int valueTimestamp_;
        /// <summary>
        /// The timestamp part of the "state" mentioned in the algorithm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValueTimestamp
        {
            get { return valueTimestamp_; }
            set
            {
                valueTimestamp_ = value;
            }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 3;
        private global::ConsensusProject.Messages.Value value_;
        /// <summary>
        /// The value part of the "state" mentioned in the algorithm
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpAborted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpAborted other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Ets != other.Ets) return false;
            if (ValueTimestamp != other.ValueTimestamp) return false;
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Ets != 0) hash ^= Ets.GetHashCode();
            if (ValueTimestamp != 0) hash ^= ValueTimestamp.GetHashCode();
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Ets != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Ets);
            }
            if (ValueTimestamp != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(ValueTimestamp);
            }
            if (value_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Ets != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ets);
            }
            if (ValueTimestamp != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueTimestamp);
            }
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpAborted other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Ets != 0)
            {
                Ets = other.Ets;
            }
            if (other.ValueTimestamp != 0)
            {
                ValueTimestamp = other.ValueTimestamp;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Ets = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            ValueTimestamp = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpPropose : pb::IMessage<EpPropose>
    {
        private static readonly pb::MessageParser<EpPropose> _parser = new pb::MessageParser<EpPropose>(() => new EpPropose());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpPropose> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpPropose()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpPropose(EpPropose other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpPropose Clone()
        {
            return new EpPropose(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpPropose);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpPropose other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpPropose other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpDecide : pb::IMessage<EpDecide>
    {
        private static readonly pb::MessageParser<EpDecide> _parser = new pb::MessageParser<EpDecide>(() => new EpDecide());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpDecide> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecide()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecide(EpDecide other) : this()
        {
            ets_ = other.ets_;
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecide Clone()
        {
            return new EpDecide(this);
        }

        /// <summary>Field number for the "ets" field.</summary>
        public const int EtsFieldNumber = 1;
        private int ets_;
        /// <summary>
        /// Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ets
        {
            get { return ets_; }
            set
            {
                ets_ = value;
            }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpDecide);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpDecide other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Ets != other.Ets) return false;
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Ets != 0) hash ^= Ets.GetHashCode();
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Ets != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Ets);
            }
            if (value_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Ets != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ets);
            }
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpDecide other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Ets != 0)
            {
                Ets = other.Ets;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Ets = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpRead_ : pb::IMessage<EpRead_>
    {
        private static readonly pb::MessageParser<EpRead_> _parser = new pb::MessageParser<EpRead_>(() => new EpRead_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpRead_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpRead_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpRead_(EpRead_ other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpRead_ Clone()
        {
            return new EpRead_(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpRead_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpRead_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpRead_ other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpState_ : pb::IMessage<EpState_>
    {
        private static readonly pb::MessageParser<EpState_> _parser = new pb::MessageParser<EpState_>(() => new EpState_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpState_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpState_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpState_(EpState_ other) : this()
        {
            valueTimestamp_ = other.valueTimestamp_;
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpState_ Clone()
        {
            return new EpState_(this);
        }

        /// <summary>Field number for the "valueTimestamp" field.</summary>
        public const int ValueTimestampFieldNumber = 1;
        private int valueTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValueTimestamp
        {
            get { return valueTimestamp_; }
            set
            {
                valueTimestamp_ = value;
            }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpState_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpState_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (ValueTimestamp != other.ValueTimestamp) return false;
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (ValueTimestamp != 0) hash ^= ValueTimestamp.GetHashCode();
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (ValueTimestamp != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(ValueTimestamp);
            }
            if (value_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (ValueTimestamp != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueTimestamp);
            }
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpState_ other)
        {
            if (other == null)
            {
                return;
            }
            if (other.ValueTimestamp != 0)
            {
                ValueTimestamp = other.ValueTimestamp;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            ValueTimestamp = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpWrite_ : pb::IMessage<EpWrite_>
    {
        private static readonly pb::MessageParser<EpWrite_> _parser = new pb::MessageParser<EpWrite_>(() => new EpWrite_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpWrite_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpWrite_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpWrite_(EpWrite_ other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpWrite_ Clone()
        {
            return new EpWrite_(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpWrite_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpWrite_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpWrite_ other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpAccept_ : pb::IMessage<EpAccept_>
    {
        private static readonly pb::MessageParser<EpAccept_> _parser = new pb::MessageParser<EpAccept_>(() => new EpAccept_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpAccept_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAccept_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAccept_(EpAccept_ other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpAccept_ Clone()
        {
            return new EpAccept_(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpAccept_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpAccept_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpAccept_ other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpDecided_ : pb::IMessage<EpDecided_>
    {
        private static readonly pb::MessageParser<EpDecided_> _parser = new pb::MessageParser<EpDecided_>(() => new EpDecided_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpDecided_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecided_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecided_(EpDecided_ other) : this()
        {
            value_ = other.value_ != null ? other.value_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpDecided_ Clone()
        {
            return new EpDecided_(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private global::ConsensusProject.Messages.Value value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Value Value
        {
            get { return value_; }
            set
            {
                value_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpDecided_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpDecided_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Value, other.Value)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (value_ != null) hash ^= Value.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (value_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Value);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (value_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpDecided_ other)
        {
            if (other == null)
            {
                return;
            }
            if (other.value_ != null)
            {
                if (value_ == null)
                {
                    value_ = new global::ConsensusProject.Messages.Value();
                }
                Value.MergeFrom(other.Value);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (value_ == null)
                            {
                                value_ = new global::ConsensusProject.Messages.Value();
                            }
                            input.ReadMessage(value_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EcNack_ : pb::IMessage<EcNack_>
    {
        private static readonly pb::MessageParser<EcNack_> _parser = new pb::MessageParser<EcNack_>(() => new EcNack_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EcNack_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNack_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNack_(EcNack_ other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNack_ Clone()
        {
            return new EcNack_(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EcNack_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EcNack_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EcNack_ other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    /// <summary>
    /// EC
    /// In the Init event or constructor, initialize "trusted" with the max-rank process in PI
    /// </summary>
    public sealed partial class EcStartEpoch : pb::IMessage<EcStartEpoch>
    {
        private static readonly pb::MessageParser<EcStartEpoch> _parser = new pb::MessageParser<EcStartEpoch>(() => new EcStartEpoch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EcStartEpoch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcStartEpoch()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcStartEpoch(EcStartEpoch other) : this()
        {
            newTimestamp_ = other.newTimestamp_;
            newLeader_ = other.newLeader_ != null ? other.newLeader_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcStartEpoch Clone()
        {
            return new EcStartEpoch(this);
        }

        /// <summary>Field number for the "newTimestamp" field.</summary>
        public const int NewTimestampFieldNumber = 1;
        private int newTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int NewTimestamp
        {
            get { return newTimestamp_; }
            set
            {
                newTimestamp_ = value;
            }
        }

        /// <summary>Field number for the "newLeader" field.</summary>
        public const int NewLeaderFieldNumber = 2;
        private global::ConsensusProject.Messages.ProcessId newLeader_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId NewLeader
        {
            get { return newLeader_; }
            set
            {
                newLeader_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EcStartEpoch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EcStartEpoch other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (NewTimestamp != other.NewTimestamp) return false;
            if (!object.Equals(NewLeader, other.NewLeader)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (NewTimestamp != 0) hash ^= NewTimestamp.GetHashCode();
            if (newLeader_ != null) hash ^= NewLeader.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (NewTimestamp != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(NewTimestamp);
            }
            if (newLeader_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(NewLeader);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (NewTimestamp != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewTimestamp);
            }
            if (newLeader_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewLeader);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EcStartEpoch other)
        {
            if (other == null)
            {
                return;
            }
            if (other.NewTimestamp != 0)
            {
                NewTimestamp = other.NewTimestamp;
            }
            if (other.newLeader_ != null)
            {
                if (newLeader_ == null)
                {
                    newLeader_ = new global::ConsensusProject.Messages.ProcessId();
                }
                NewLeader.MergeFrom(other.NewLeader);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            NewTimestamp = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            if (newLeader_ == null)
                            {
                                newLeader_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(newLeader_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EcNewEpoch_ : pb::IMessage<EcNewEpoch_>
    {
        private static readonly pb::MessageParser<EcNewEpoch_> _parser = new pb::MessageParser<EcNewEpoch_>(() => new EcNewEpoch_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EcNewEpoch_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNewEpoch_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNewEpoch_(EcNewEpoch_ other) : this()
        {
            timestamp_ = other.timestamp_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EcNewEpoch_ Clone()
        {
            return new EcNewEpoch_(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private int timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Timestamp
        {
            get { return timestamp_; }
            set
            {
                timestamp_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EcNewEpoch_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EcNewEpoch_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Timestamp != other.Timestamp) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Timestamp != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Timestamp);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Timestamp != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EcNewEpoch_ other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Timestamp != 0)
            {
                Timestamp = other.Timestamp;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Timestamp = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// BEB
    /// </summary>
    public sealed partial class BebBroadcast : pb::IMessage<BebBroadcast>
    {
        private static readonly pb::MessageParser<BebBroadcast> _parser = new pb::MessageParser<BebBroadcast>(() => new BebBroadcast());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BebBroadcast> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebBroadcast()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebBroadcast(BebBroadcast other) : this()
        {
            message_ = other.message_ != null ? other.message_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebBroadcast Clone()
        {
            return new BebBroadcast(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private global::ConsensusProject.Messages.Message message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message Message
        {
            get { return message_; }
            set
            {
                message_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as BebBroadcast);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BebBroadcast other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Message, other.Message)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (message_ != null) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (message_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (message_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BebBroadcast other)
        {
            if (other == null)
            {
                return;
            }
            if (other.message_ != null)
            {
                if (message_ == null)
                {
                    message_ = new global::ConsensusProject.Messages.Message();
                }
                Message.MergeFrom(other.Message);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (message_ == null)
                            {
                                message_ = new global::ConsensusProject.Messages.Message();
                            }
                            input.ReadMessage(message_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class BebDeliver : pb::IMessage<BebDeliver>
    {
        private static readonly pb::MessageParser<BebDeliver> _parser = new pb::MessageParser<BebDeliver>(() => new BebDeliver());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BebDeliver> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebDeliver()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebDeliver(BebDeliver other) : this()
        {
            message_ = other.message_ != null ? other.message_.Clone() : null;
            sender_ = other.sender_ != null ? other.sender_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BebDeliver Clone()
        {
            return new BebDeliver(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private global::ConsensusProject.Messages.Message message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message Message
        {
            get { return message_; }
            set
            {
                message_ = value;
            }
        }

        /// <summary>Field number for the "sender" field.</summary>
        public const int SenderFieldNumber = 2;
        private global::ConsensusProject.Messages.ProcessId sender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Sender
        {
            get { return sender_; }
            set
            {
                sender_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as BebDeliver);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BebDeliver other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Message, other.Message)) return false;
            if (!object.Equals(Sender, other.Sender)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (message_ != null) hash ^= Message.GetHashCode();
            if (sender_ != null) hash ^= Sender.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (message_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Message);
            }
            if (sender_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Sender);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (message_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
            }
            if (sender_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BebDeliver other)
        {
            if (other == null)
            {
                return;
            }
            if (other.message_ != null)
            {
                if (message_ == null)
                {
                    message_ = new global::ConsensusProject.Messages.Message();
                }
                Message.MergeFrom(other.Message);
            }
            if (other.sender_ != null)
            {
                if (sender_ == null)
                {
                    sender_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Sender.MergeFrom(other.Sender);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (message_ == null)
                            {
                                message_ = new global::ConsensusProject.Messages.Message();
                            }
                            input.ReadMessage(message_);
                            break;
                        }
                    case 18:
                        {
                            if (sender_ == null)
                            {
                                sender_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(sender_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// ELD
    /// </summary>
    public sealed partial class EldTimeout : pb::IMessage<EldTimeout>
    {
        private static readonly pb::MessageParser<EldTimeout> _parser = new pb::MessageParser<EldTimeout>(() => new EldTimeout());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EldTimeout> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTimeout()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTimeout(EldTimeout other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTimeout Clone()
        {
            return new EldTimeout(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EldTimeout);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EldTimeout other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EldTimeout other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EldTrust : pb::IMessage<EldTrust>
    {
        private static readonly pb::MessageParser<EldTrust> _parser = new pb::MessageParser<EldTrust>(() => new EldTrust());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EldTrust> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTrust()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTrust(EldTrust other) : this()
        {
            process_ = other.process_ != null ? other.process_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EldTrust Clone()
        {
            return new EldTrust(this);
        }

        /// <summary>Field number for the "process" field.</summary>
        public const int ProcessFieldNumber = 1;
        private global::ConsensusProject.Messages.ProcessId process_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Process
        {
            get { return process_; }
            set
            {
                process_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EldTrust);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EldTrust other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Process, other.Process)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (process_ != null) hash ^= Process.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (process_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Process);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (process_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Process);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EldTrust other)
        {
            if (other == null)
            {
                return;
            }
            if (other.process_ != null)
            {
                if (process_ == null)
                {
                    process_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Process.MergeFrom(other.Process);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (process_ == null)
                            {
                                process_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(process_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// EPFD
    /// Use as timer delay "delta" 100 milliseconds
    /// </summary>
    public sealed partial class EpfdTimeout : pb::IMessage<EpfdTimeout>
    {
        private static readonly pb::MessageParser<EpfdTimeout> _parser = new pb::MessageParser<EpfdTimeout>(() => new EpfdTimeout());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpfdTimeout> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdTimeout()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdTimeout(EpfdTimeout other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdTimeout Clone()
        {
            return new EpfdTimeout(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpfdTimeout);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpfdTimeout other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpfdTimeout other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpfdHeartbeatRequest_ : pb::IMessage<EpfdHeartbeatRequest_>
    {
        private static readonly pb::MessageParser<EpfdHeartbeatRequest_> _parser = new pb::MessageParser<EpfdHeartbeatRequest_>(() => new EpfdHeartbeatRequest_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpfdHeartbeatRequest_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatRequest_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatRequest_(EpfdHeartbeatRequest_ other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatRequest_ Clone()
        {
            return new EpfdHeartbeatRequest_(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpfdHeartbeatRequest_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpfdHeartbeatRequest_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpfdHeartbeatRequest_ other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpfdHeartbeatReply_ : pb::IMessage<EpfdHeartbeatReply_>
    {
        private static readonly pb::MessageParser<EpfdHeartbeatReply_> _parser = new pb::MessageParser<EpfdHeartbeatReply_>(() => new EpfdHeartbeatReply_());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpfdHeartbeatReply_> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatReply_()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatReply_(EpfdHeartbeatReply_ other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdHeartbeatReply_ Clone()
        {
            return new EpfdHeartbeatReply_(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpfdHeartbeatReply_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpfdHeartbeatReply_ other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpfdHeartbeatReply_ other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class EpfdSuspect : pb::IMessage<EpfdSuspect>
    {
        private static readonly pb::MessageParser<EpfdSuspect> _parser = new pb::MessageParser<EpfdSuspect>(() => new EpfdSuspect());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpfdSuspect> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdSuspect()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdSuspect(EpfdSuspect other) : this()
        {
            process_ = other.process_ != null ? other.process_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdSuspect Clone()
        {
            return new EpfdSuspect(this);
        }

        /// <summary>Field number for the "process" field.</summary>
        public const int ProcessFieldNumber = 1;
        private global::ConsensusProject.Messages.ProcessId process_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Process
        {
            get { return process_; }
            set
            {
                process_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpfdSuspect);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpfdSuspect other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Process, other.Process)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (process_ != null) hash ^= Process.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (process_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Process);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (process_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Process);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpfdSuspect other)
        {
            if (other == null)
            {
                return;
            }
            if (other.process_ != null)
            {
                if (process_ == null)
                {
                    process_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Process.MergeFrom(other.Process);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (process_ == null)
                            {
                                process_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(process_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EpfdRestore : pb::IMessage<EpfdRestore>
    {
        private static readonly pb::MessageParser<EpfdRestore> _parser = new pb::MessageParser<EpfdRestore>(() => new EpfdRestore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EpfdRestore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdRestore()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdRestore(EpfdRestore other) : this()
        {
            process_ = other.process_ != null ? other.process_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EpfdRestore Clone()
        {
            return new EpfdRestore(this);
        }

        /// <summary>Field number for the "process" field.</summary>
        public const int ProcessFieldNumber = 1;
        private global::ConsensusProject.Messages.ProcessId process_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Process
        {
            get { return process_; }
            set
            {
                process_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EpfdRestore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EpfdRestore other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Process, other.Process)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (process_ != null) hash ^= Process.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (process_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Process);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (process_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Process);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EpfdRestore other)
        {
            if (other == null)
            {
                return;
            }
            if (other.process_ != null)
            {
                if (process_ == null)
                {
                    process_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Process.MergeFrom(other.Process);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (process_ == null)
                            {
                                process_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(process_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// PL
    /// </summary>
    public sealed partial class PlSend : pb::IMessage<PlSend>
    {
        private static readonly pb::MessageParser<PlSend> _parser = new pb::MessageParser<PlSend>(() => new PlSend());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlSend> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlSend()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlSend(PlSend other) : this()
        {
            destination_ = other.destination_ != null ? other.destination_.Clone() : null;
            message_ = other.message_ != null ? other.message_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlSend Clone()
        {
            return new PlSend(this);
        }

        /// <summary>Field number for the "destination" field.</summary>
        public const int DestinationFieldNumber = 1;
        private global::ConsensusProject.Messages.ProcessId destination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Destination
        {
            get { return destination_; }
            set
            {
                destination_ = value;
            }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private global::ConsensusProject.Messages.Message message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message Message
        {
            get { return message_; }
            set
            {
                message_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PlSend);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlSend other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Destination, other.Destination)) return false;
            if (!object.Equals(Message, other.Message)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (destination_ != null) hash ^= Destination.GetHashCode();
            if (message_ != null) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (destination_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Destination);
            }
            if (message_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (destination_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
            }
            if (message_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlSend other)
        {
            if (other == null)
            {
                return;
            }
            if (other.destination_ != null)
            {
                if (destination_ == null)
                {
                    destination_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Destination.MergeFrom(other.Destination);
            }
            if (other.message_ != null)
            {
                if (message_ == null)
                {
                    message_ = new global::ConsensusProject.Messages.Message();
                }
                Message.MergeFrom(other.Message);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (destination_ == null)
                            {
                                destination_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(destination_);
                            break;
                        }
                    case 18:
                        {
                            if (message_ == null)
                            {
                                message_ = new global::ConsensusProject.Messages.Message();
                            }
                            input.ReadMessage(message_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class PlDeliver : pb::IMessage<PlDeliver>
    {
        private static readonly pb::MessageParser<PlDeliver> _parser = new pb::MessageParser<PlDeliver>(() => new PlDeliver());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlDeliver> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlDeliver()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlDeliver(PlDeliver other) : this()
        {
            sender_ = other.sender_ != null ? other.sender_.Clone() : null;
            message_ = other.message_ != null ? other.message_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlDeliver Clone()
        {
            return new PlDeliver(this);
        }

        /// <summary>Field number for the "sender" field.</summary>
        public const int SenderFieldNumber = 1;
        private global::ConsensusProject.Messages.ProcessId sender_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.ProcessId Sender
        {
            get { return sender_; }
            set
            {
                sender_ = value;
            }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private global::ConsensusProject.Messages.Message message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message Message
        {
            get { return message_; }
            set
            {
                message_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PlDeliver);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlDeliver other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Sender, other.Sender)) return false;
            if (!object.Equals(Message, other.Message)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (sender_ != null) hash ^= Sender.GetHashCode();
            if (message_ != null) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (sender_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Sender);
            }
            if (message_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (sender_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
            }
            if (message_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlDeliver other)
        {
            if (other == null)
            {
                return;
            }
            if (other.sender_ != null)
            {
                if (sender_ == null)
                {
                    sender_ = new global::ConsensusProject.Messages.ProcessId();
                }
                Sender.MergeFrom(other.Sender);
            }
            if (other.message_ != null)
            {
                if (message_ == null)
                {
                    message_ = new global::ConsensusProject.Messages.Message();
                }
                Message.MergeFrom(other.Message);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (sender_ == null)
                            {
                                sender_ = new global::ConsensusProject.Messages.ProcessId();
                            }
                            input.ReadMessage(sender_);
                            break;
                        }
                    case 18:
                        {
                            if (message_ == null)
                            {
                                message_ = new global::ConsensusProject.Messages.Message();
                            }
                            input.ReadMessage(message_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Network-traveling message
    /// When handling MessageA(PlSend(MessageB)) create MessageC(NetworkMessage(MessageB)), setting:
    ///     MessageC.SystemId = MessageA.SystemId
    ///     MessageC.AbstractionId = MessageA.AbstractionId
    ///     NetworkMessage.senderHost = N/A (ignore)
    ///     NetworkMessage.senderListeningPort = The your listening port
    /// Then marshal MEssageC to byte buffer and send:
    ///    bytes 0 - 3: buffer length
    ///    bytes 4 -  : buffer data
    /// When unmarshalling from a buffer received from the network create MessageD(PlDeliver(MessageB)), setting:
    ///     MessageD.AbstractionId = MessageC.AbstractionId
    /// </summary>
    public sealed partial class NetworkMessage : pb::IMessage<NetworkMessage>
    {
        private static readonly pb::MessageParser<NetworkMessage> _parser = new pb::MessageParser<NetworkMessage>(() => new NetworkMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NetworkMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkMessage()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkMessage(NetworkMessage other) : this()
        {
            senderHost_ = other.senderHost_;
            senderListeningPort_ = other.senderListeningPort_;
            message_ = other.message_ != null ? other.message_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkMessage Clone()
        {
            return new NetworkMessage(this);
        }

        /// <summary>Field number for the "senderHost" field.</summary>
        public const int SenderHostFieldNumber = 1;
        private string senderHost_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SenderHost
        {
            get { return senderHost_; }
            set
            {
                senderHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "senderListeningPort" field.</summary>
        public const int SenderListeningPortFieldNumber = 2;
        private int senderListeningPort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SenderListeningPort
        {
            get { return senderListeningPort_; }
            set
            {
                senderListeningPort_ = value;
            }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 3;
        private global::ConsensusProject.Messages.Message message_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message Message
        {
            get { return message_; }
            set
            {
                message_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as NetworkMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NetworkMessage other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (SenderHost != other.SenderHost) return false;
            if (SenderListeningPort != other.SenderListeningPort) return false;
            if (!object.Equals(Message, other.Message)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (SenderHost.Length != 0) hash ^= SenderHost.GetHashCode();
            if (SenderListeningPort != 0) hash ^= SenderListeningPort.GetHashCode();
            if (message_ != null) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (SenderHost.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(SenderHost);
            }
            if (SenderListeningPort != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(SenderListeningPort);
            }
            if (message_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (SenderHost.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderHost);
            }
            if (SenderListeningPort != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderListeningPort);
            }
            if (message_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NetworkMessage other)
        {
            if (other == null)
            {
                return;
            }
            if (other.SenderHost.Length != 0)
            {
                SenderHost = other.SenderHost;
            }
            if (other.SenderListeningPort != 0)
            {
                SenderListeningPort = other.SenderListeningPort;
            }
            if (other.message_ != null)
            {
                if (message_ == null)
                {
                    message_ = new global::ConsensusProject.Messages.Message();
                }
                Message.MergeFrom(other.Message);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            SenderHost = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            SenderListeningPort = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            if (message_ == null)
                            {
                                message_ = new global::ConsensusProject.Messages.Message();
                            }
                            input.ReadMessage(message_);
                            break;
                        }
                }
            }
        }

    }

    /// <summary>
    /// Wrapper message
    /// </summary>
    public sealed partial class Message : pb::IMessage<Message>
    {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::ConsensusProject.Messages.MessagesReflection.Descriptor.MessageTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this()
        {
            type_ = other.type_;
            messageUuid_ = other.messageUuid_;
            abstractionId_ = other.abstractionId_;
            systemId_ = other.systemId_;
            networkMessage_ = other.networkMessage_ != null ? other.networkMessage_.Clone() : null;
            appRegistration_ = other.appRegistration_ != null ? other.appRegistration_.Clone() : null;
            appPropose_ = other.appPropose_ != null ? other.appPropose_.Clone() : null;
            appDecide_ = other.appDecide_ != null ? other.appDecide_.Clone() : null;
            ucDecide_ = other.ucDecide_ != null ? other.ucDecide_.Clone() : null;
            ucPropose_ = other.ucPropose_ != null ? other.ucPropose_.Clone() : null;
            epAbort_ = other.epAbort_ != null ? other.epAbort_.Clone() : null;
            epAborted_ = other.epAborted_ != null ? other.epAborted_.Clone() : null;
            epAccept_ = other.epAccept_ != null ? other.epAccept_.Clone() : null;
            epDecide_ = other.epDecide_ != null ? other.epDecide_.Clone() : null;
            epDecided_ = other.epDecided_ != null ? other.epDecided_.Clone() : null;
            epPropose_ = other.epPropose_ != null ? other.epPropose_.Clone() : null;
            epRead_ = other.epRead_ != null ? other.epRead_.Clone() : null;
            epState_ = other.epState_ != null ? other.epState_.Clone() : null;
            epWrite_ = other.epWrite_ != null ? other.epWrite_.Clone() : null;
            ecNack_ = other.ecNack_ != null ? other.ecNack_.Clone() : null;
            ecNewEpoch_ = other.ecNewEpoch_ != null ? other.ecNewEpoch_.Clone() : null;
            ecStartEpoch_ = other.ecStartEpoch_ != null ? other.ecStartEpoch_.Clone() : null;
            bebBroadcast_ = other.bebBroadcast_ != null ? other.bebBroadcast_.Clone() : null;
            bebDeliver_ = other.bebDeliver_ != null ? other.bebDeliver_.Clone() : null;
            eldTimeout_ = other.eldTimeout_ != null ? other.eldTimeout_.Clone() : null;
            eldTrust_ = other.eldTrust_ != null ? other.eldTrust_.Clone() : null;
            epfdTimeout_ = other.epfdTimeout_ != null ? other.epfdTimeout_.Clone() : null;
            epfdHeartbeatRequest_ = other.epfdHeartbeatRequest_ != null ? other.epfdHeartbeatRequest_.Clone() : null;
            epfdHeartbeatReply_ = other.epfdHeartbeatReply_ != null ? other.epfdHeartbeatReply_.Clone() : null;
            epfdSuspect_ = other.epfdSuspect_ != null ? other.epfdSuspect_.Clone() : null;
            epfdRestore_ = other.epfdRestore_ != null ? other.epfdRestore_.Clone() : null;
            plDeliver_ = other.plDeliver_ != null ? other.plDeliver_.Clone() : null;
            plSend_ = other.plSend_ != null ? other.plSend_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone()
        {
            return new Message(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::ConsensusProject.Messages.Message.Types.Type type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.Message.Types.Type Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "messageUuid" field.</summary>
        public const int MessageUuidFieldNumber = 2;
        private string messageUuid_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MessageUuid
        {
            get { return messageUuid_; }
            set
            {
                messageUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "abstractionId" field.</summary>
        public const int AbstractionIdFieldNumber = 3;
        private string abstractionId_ = "";
        /// <summary>
        /// One of: app, uc, ep0, ep1, ..., ec, eld, epfd, beb, pl
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AbstractionId
        {
            get { return abstractionId_; }
            set
            {
                abstractionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "systemId" field.</summary>
        public const int SystemIdFieldNumber = 4;
        private string systemId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SystemId
        {
            get { return systemId_; }
            set
            {
                systemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "networkMessage" field.</summary>
        public const int NetworkMessageFieldNumber = 5;
        private global::ConsensusProject.Messages.NetworkMessage networkMessage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.NetworkMessage NetworkMessage
        {
            get { return networkMessage_; }
            set
            {
                networkMessage_ = value;
            }
        }

        /// <summary>Field number for the "appRegistration" field.</summary>
        public const int AppRegistrationFieldNumber = 6;
        private global::ConsensusProject.Messages.AppRegistration appRegistration_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.AppRegistration AppRegistration
        {
            get { return appRegistration_; }
            set
            {
                appRegistration_ = value;
            }
        }

        /// <summary>Field number for the "appPropose" field.</summary>
        public const int AppProposeFieldNumber = 7;
        private global::ConsensusProject.Messages.AppPropose appPropose_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.AppPropose AppPropose
        {
            get { return appPropose_; }
            set
            {
                appPropose_ = value;
            }
        }

        /// <summary>Field number for the "appDecide" field.</summary>
        public const int AppDecideFieldNumber = 8;
        private global::ConsensusProject.Messages.AppDecide appDecide_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.AppDecide AppDecide
        {
            get { return appDecide_; }
            set
            {
                appDecide_ = value;
            }
        }

        /// <summary>Field number for the "ucDecide" field.</summary>
        public const int UcDecideFieldNumber = 10;
        private global::ConsensusProject.Messages.UcDecide ucDecide_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.UcDecide UcDecide
        {
            get { return ucDecide_; }
            set
            {
                ucDecide_ = value;
            }
        }

        /// <summary>Field number for the "ucPropose" field.</summary>
        public const int UcProposeFieldNumber = 11;
        private global::ConsensusProject.Messages.UcPropose ucPropose_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.UcPropose UcPropose
        {
            get { return ucPropose_; }
            set
            {
                ucPropose_ = value;
            }
        }

        /// <summary>Field number for the "epAbort" field.</summary>
        public const int EpAbortFieldNumber = 20;
        private global::ConsensusProject.Messages.EpAbort epAbort_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpAbort EpAbort
        {
            get { return epAbort_; }
            set
            {
                epAbort_ = value;
            }
        }

        /// <summary>Field number for the "epAborted" field.</summary>
        public const int EpAbortedFieldNumber = 21;
        private global::ConsensusProject.Messages.EpAborted epAborted_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpAborted EpAborted
        {
            get { return epAborted_; }
            set
            {
                epAborted_ = value;
            }
        }

        /// <summary>Field number for the "epAccept_" field.</summary>
        public const int EpAcceptFieldNumber = 22;
        private global::ConsensusProject.Messages.EpAccept_ epAccept_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpAccept_ EpAccept
        {
            get { return epAccept_; }
            set
            {
                epAccept_ = value;
            }
        }

        /// <summary>Field number for the "epDecide" field.</summary>
        public const int EpDecideFieldNumber = 23;
        private global::ConsensusProject.Messages.EpDecide epDecide_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpDecide EpDecide
        {
            get { return epDecide_; }
            set
            {
                epDecide_ = value;
            }
        }

        /// <summary>Field number for the "epDecided_" field.</summary>
        public const int EpDecidedFieldNumber = 24;
        private global::ConsensusProject.Messages.EpDecided_ epDecided_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpDecided_ EpDecided
        {
            get { return epDecided_; }
            set
            {
                epDecided_ = value;
            }
        }

        /// <summary>Field number for the "epPropose" field.</summary>
        public const int EpProposeFieldNumber = 25;
        private global::ConsensusProject.Messages.EpPropose epPropose_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpPropose EpPropose
        {
            get { return epPropose_; }
            set
            {
                epPropose_ = value;
            }
        }

        /// <summary>Field number for the "epRead_" field.</summary>
        public const int EpReadFieldNumber = 26;
        private global::ConsensusProject.Messages.EpRead_ epRead_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpRead_ EpRead
        {
            get { return epRead_; }
            set
            {
                epRead_ = value;
            }
        }

        /// <summary>Field number for the "epState_" field.</summary>
        public const int EpStateFieldNumber = 27;
        private global::ConsensusProject.Messages.EpState_ epState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpState_ EpState
        {
            get { return epState_; }
            set
            {
                epState_ = value;
            }
        }

        /// <summary>Field number for the "epWrite_" field.</summary>
        public const int EpWriteFieldNumber = 28;
        private global::ConsensusProject.Messages.EpWrite_ epWrite_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpWrite_ EpWrite
        {
            get { return epWrite_; }
            set
            {
                epWrite_ = value;
            }
        }

        /// <summary>Field number for the "ecNack_" field.</summary>
        public const int EcNackFieldNumber = 31;
        private global::ConsensusProject.Messages.EcNack_ ecNack_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EcNack_ EcNack
        {
            get { return ecNack_; }
            set
            {
                ecNack_ = value;
            }
        }

        /// <summary>Field number for the "ecNewEpoch_" field.</summary>
        public const int EcNewEpochFieldNumber = 32;
        private global::ConsensusProject.Messages.EcNewEpoch_ ecNewEpoch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EcNewEpoch_ EcNewEpoch
        {
            get { return ecNewEpoch_; }
            set
            {
                ecNewEpoch_ = value;
            }
        }

        /// <summary>Field number for the "ecStartEpoch" field.</summary>
        public const int EcStartEpochFieldNumber = 33;
        private global::ConsensusProject.Messages.EcStartEpoch ecStartEpoch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EcStartEpoch EcStartEpoch
        {
            get { return ecStartEpoch_; }
            set
            {
                ecStartEpoch_ = value;
            }
        }

        /// <summary>Field number for the "bebBroadcast" field.</summary>
        public const int BebBroadcastFieldNumber = 40;
        private global::ConsensusProject.Messages.BebBroadcast bebBroadcast_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.BebBroadcast BebBroadcast
        {
            get { return bebBroadcast_; }
            set
            {
                bebBroadcast_ = value;
            }
        }

        /// <summary>Field number for the "bebDeliver" field.</summary>
        public const int BebDeliverFieldNumber = 41;
        private global::ConsensusProject.Messages.BebDeliver bebDeliver_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.BebDeliver BebDeliver
        {
            get { return bebDeliver_; }
            set
            {
                bebDeliver_ = value;
            }
        }

        /// <summary>Field number for the "eldTimeout" field.</summary>
        public const int EldTimeoutFieldNumber = 50;
        private global::ConsensusProject.Messages.EldTimeout eldTimeout_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EldTimeout EldTimeout
        {
            get { return eldTimeout_; }
            set
            {
                eldTimeout_ = value;
            }
        }

        /// <summary>Field number for the "eldTrust" field.</summary>
        public const int EldTrustFieldNumber = 51;
        private global::ConsensusProject.Messages.EldTrust eldTrust_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EldTrust EldTrust
        {
            get { return eldTrust_; }
            set
            {
                eldTrust_ = value;
            }
        }

        /// <summary>Field number for the "epfdTimeout" field.</summary>
        public const int EpfdTimeoutFieldNumber = 60;
        private global::ConsensusProject.Messages.EpfdTimeout epfdTimeout_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpfdTimeout EpfdTimeout
        {
            get { return epfdTimeout_; }
            set
            {
                epfdTimeout_ = value;
            }
        }

        /// <summary>Field number for the "epfdHeartbeatRequest_" field.</summary>
        public const int EpfdHeartbeatRequestFieldNumber = 61;
        private global::ConsensusProject.Messages.EpfdHeartbeatRequest_ epfdHeartbeatRequest_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpfdHeartbeatRequest_ EpfdHeartbeatRequest
        {
            get { return epfdHeartbeatRequest_; }
            set
            {
                epfdHeartbeatRequest_ = value;
            }
        }

        /// <summary>Field number for the "epfdHeartbeatReply_" field.</summary>
        public const int EpfdHeartbeatReplyFieldNumber = 62;
        private global::ConsensusProject.Messages.EpfdHeartbeatReply_ epfdHeartbeatReply_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpfdHeartbeatReply_ EpfdHeartbeatReply
        {
            get { return epfdHeartbeatReply_; }
            set
            {
                epfdHeartbeatReply_ = value;
            }
        }

        /// <summary>Field number for the "epfdSuspect" field.</summary>
        public const int EpfdSuspectFieldNumber = 63;
        private global::ConsensusProject.Messages.EpfdSuspect epfdSuspect_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpfdSuspect EpfdSuspect
        {
            get { return epfdSuspect_; }
            set
            {
                epfdSuspect_ = value;
            }
        }

        /// <summary>Field number for the "epfdRestore" field.</summary>
        public const int EpfdRestoreFieldNumber = 64;
        private global::ConsensusProject.Messages.EpfdRestore epfdRestore_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.EpfdRestore EpfdRestore
        {
            get { return epfdRestore_; }
            set
            {
                epfdRestore_ = value;
            }
        }

        /// <summary>Field number for the "plDeliver" field.</summary>
        public const int PlDeliverFieldNumber = 70;
        private global::ConsensusProject.Messages.PlDeliver plDeliver_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.PlDeliver PlDeliver
        {
            get { return plDeliver_; }
            set
            {
                plDeliver_ = value;
            }
        }

        /// <summary>Field number for the "plSend" field.</summary>
        public const int PlSendFieldNumber = 71;
        private global::ConsensusProject.Messages.PlSend plSend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::ConsensusProject.Messages.PlSend PlSend
        {
            get { return plSend_; }
            set
            {
                plSend_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            if (MessageUuid != other.MessageUuid) return false;
            if (AbstractionId != other.AbstractionId) return false;
            if (SystemId != other.SystemId) return false;
            if (!object.Equals(NetworkMessage, other.NetworkMessage)) return false;
            if (!object.Equals(AppRegistration, other.AppRegistration)) return false;
            if (!object.Equals(AppPropose, other.AppPropose)) return false;
            if (!object.Equals(AppDecide, other.AppDecide)) return false;
            if (!object.Equals(UcDecide, other.UcDecide)) return false;
            if (!object.Equals(UcPropose, other.UcPropose)) return false;
            if (!object.Equals(EpAbort, other.EpAbort)) return false;
            if (!object.Equals(EpAborted, other.EpAborted)) return false;
            if (!object.Equals(EpAccept, other.EpAccept)) return false;
            if (!object.Equals(EpDecide, other.EpDecide)) return false;
            if (!object.Equals(EpDecided, other.EpDecided)) return false;
            if (!object.Equals(EpPropose, other.EpPropose)) return false;
            if (!object.Equals(EpRead, other.EpRead)) return false;
            if (!object.Equals(EpState, other.EpState)) return false;
            if (!object.Equals(EpWrite, other.EpWrite)) return false;
            if (!object.Equals(EcNack, other.EcNack)) return false;
            if (!object.Equals(EcNewEpoch, other.EcNewEpoch)) return false;
            if (!object.Equals(EcStartEpoch, other.EcStartEpoch)) return false;
            if (!object.Equals(BebBroadcast, other.BebBroadcast)) return false;
            if (!object.Equals(BebDeliver, other.BebDeliver)) return false;
            if (!object.Equals(EldTimeout, other.EldTimeout)) return false;
            if (!object.Equals(EldTrust, other.EldTrust)) return false;
            if (!object.Equals(EpfdTimeout, other.EpfdTimeout)) return false;
            if (!object.Equals(EpfdHeartbeatRequest, other.EpfdHeartbeatRequest)) return false;
            if (!object.Equals(EpfdHeartbeatReply, other.EpfdHeartbeatReply)) return false;
            if (!object.Equals(EpfdSuspect, other.EpfdSuspect)) return false;
            if (!object.Equals(EpfdRestore, other.EpfdRestore)) return false;
            if (!object.Equals(PlDeliver, other.PlDeliver)) return false;
            if (!object.Equals(PlSend, other.PlSend)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            if (MessageUuid.Length != 0) hash ^= MessageUuid.GetHashCode();
            if (AbstractionId.Length != 0) hash ^= AbstractionId.GetHashCode();
            if (SystemId.Length != 0) hash ^= SystemId.GetHashCode();
            if (networkMessage_ != null) hash ^= NetworkMessage.GetHashCode();
            if (appRegistration_ != null) hash ^= AppRegistration.GetHashCode();
            if (appPropose_ != null) hash ^= AppPropose.GetHashCode();
            if (appDecide_ != null) hash ^= AppDecide.GetHashCode();
            if (ucDecide_ != null) hash ^= UcDecide.GetHashCode();
            if (ucPropose_ != null) hash ^= UcPropose.GetHashCode();
            if (epAbort_ != null) hash ^= EpAbort.GetHashCode();
            if (epAborted_ != null) hash ^= EpAborted.GetHashCode();
            if (epAccept_ != null) hash ^= EpAccept.GetHashCode();
            if (epDecide_ != null) hash ^= EpDecide.GetHashCode();
            if (epDecided_ != null) hash ^= EpDecided.GetHashCode();
            if (epPropose_ != null) hash ^= EpPropose.GetHashCode();
            if (epRead_ != null) hash ^= EpRead.GetHashCode();
            if (epState_ != null) hash ^= EpState.GetHashCode();
            if (epWrite_ != null) hash ^= EpWrite.GetHashCode();
            if (ecNack_ != null) hash ^= EcNack.GetHashCode();
            if (ecNewEpoch_ != null) hash ^= EcNewEpoch.GetHashCode();
            if (ecStartEpoch_ != null) hash ^= EcStartEpoch.GetHashCode();
            if (bebBroadcast_ != null) hash ^= BebBroadcast.GetHashCode();
            if (bebDeliver_ != null) hash ^= BebDeliver.GetHashCode();
            if (eldTimeout_ != null) hash ^= EldTimeout.GetHashCode();
            if (eldTrust_ != null) hash ^= EldTrust.GetHashCode();
            if (epfdTimeout_ != null) hash ^= EpfdTimeout.GetHashCode();
            if (epfdHeartbeatRequest_ != null) hash ^= EpfdHeartbeatRequest.GetHashCode();
            if (epfdHeartbeatReply_ != null) hash ^= EpfdHeartbeatReply.GetHashCode();
            if (epfdSuspect_ != null) hash ^= EpfdSuspect.GetHashCode();
            if (epfdRestore_ != null) hash ^= EpfdRestore.GetHashCode();
            if (plDeliver_ != null) hash ^= PlDeliver.GetHashCode();
            if (plSend_ != null) hash ^= PlSend.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != 0)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (MessageUuid.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(MessageUuid);
            }
            if (AbstractionId.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(AbstractionId);
            }
            if (SystemId.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(SystemId);
            }
            if (networkMessage_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(NetworkMessage);
            }
            if (appRegistration_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(AppRegistration);
            }
            if (appPropose_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(AppPropose);
            }
            if (appDecide_ != null)
            {
                output.WriteRawTag(66);
                output.WriteMessage(AppDecide);
            }
            if (ucDecide_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(UcDecide);
            }
            if (ucPropose_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(UcPropose);
            }
            if (epAbort_ != null)
            {
                output.WriteRawTag(162, 1);
                output.WriteMessage(EpAbort);
            }
            if (epAborted_ != null)
            {
                output.WriteRawTag(170, 1);
                output.WriteMessage(EpAborted);
            }
            if (epAccept_ != null)
            {
                output.WriteRawTag(178, 1);
                output.WriteMessage(EpAccept);
            }
            if (epDecide_ != null)
            {
                output.WriteRawTag(186, 1);
                output.WriteMessage(EpDecide);
            }
            if (epDecided_ != null)
            {
                output.WriteRawTag(194, 1);
                output.WriteMessage(EpDecided);
            }
            if (epPropose_ != null)
            {
                output.WriteRawTag(202, 1);
                output.WriteMessage(EpPropose);
            }
            if (epRead_ != null)
            {
                output.WriteRawTag(210, 1);
                output.WriteMessage(EpRead);
            }
            if (epState_ != null)
            {
                output.WriteRawTag(218, 1);
                output.WriteMessage(EpState);
            }
            if (epWrite_ != null)
            {
                output.WriteRawTag(226, 1);
                output.WriteMessage(EpWrite);
            }
            if (ecNack_ != null)
            {
                output.WriteRawTag(250, 1);
                output.WriteMessage(EcNack);
            }
            if (ecNewEpoch_ != null)
            {
                output.WriteRawTag(130, 2);
                output.WriteMessage(EcNewEpoch);
            }
            if (ecStartEpoch_ != null)
            {
                output.WriteRawTag(138, 2);
                output.WriteMessage(EcStartEpoch);
            }
            if (bebBroadcast_ != null)
            {
                output.WriteRawTag(194, 2);
                output.WriteMessage(BebBroadcast);
            }
            if (bebDeliver_ != null)
            {
                output.WriteRawTag(202, 2);
                output.WriteMessage(BebDeliver);
            }
            if (eldTimeout_ != null)
            {
                output.WriteRawTag(146, 3);
                output.WriteMessage(EldTimeout);
            }
            if (eldTrust_ != null)
            {
                output.WriteRawTag(154, 3);
                output.WriteMessage(EldTrust);
            }
            if (epfdTimeout_ != null)
            {
                output.WriteRawTag(226, 3);
                output.WriteMessage(EpfdTimeout);
            }
            if (epfdHeartbeatRequest_ != null)
            {
                output.WriteRawTag(234, 3);
                output.WriteMessage(EpfdHeartbeatRequest);
            }
            if (epfdHeartbeatReply_ != null)
            {
                output.WriteRawTag(242, 3);
                output.WriteMessage(EpfdHeartbeatReply);
            }
            if (epfdSuspect_ != null)
            {
                output.WriteRawTag(250, 3);
                output.WriteMessage(EpfdSuspect);
            }
            if (epfdRestore_ != null)
            {
                output.WriteRawTag(130, 4);
                output.WriteMessage(EpfdRestore);
            }
            if (plDeliver_ != null)
            {
                output.WriteRawTag(178, 4);
                output.WriteMessage(PlDeliver);
            }
            if (plSend_ != null)
            {
                output.WriteRawTag(186, 4);
                output.WriteMessage(PlSend);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Type != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (MessageUuid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageUuid);
            }
            if (AbstractionId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AbstractionId);
            }
            if (SystemId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemId);
            }
            if (networkMessage_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkMessage);
            }
            if (appRegistration_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppRegistration);
            }
            if (appPropose_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppPropose);
            }
            if (appDecide_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDecide);
            }
            if (ucDecide_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UcDecide);
            }
            if (ucPropose_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UcPropose);
            }
            if (epAbort_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpAbort);
            }
            if (epAborted_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpAborted);
            }
            if (epAccept_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpAccept);
            }
            if (epDecide_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpDecide);
            }
            if (epDecided_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpDecided);
            }
            if (epPropose_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpPropose);
            }
            if (epRead_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpRead);
            }
            if (epState_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpState);
            }
            if (epWrite_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpWrite);
            }
            if (ecNack_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EcNack);
            }
            if (ecNewEpoch_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EcNewEpoch);
            }
            if (ecStartEpoch_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EcStartEpoch);
            }
            if (bebBroadcast_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(BebBroadcast);
            }
            if (bebDeliver_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(BebDeliver);
            }
            if (eldTimeout_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EldTimeout);
            }
            if (eldTrust_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EldTrust);
            }
            if (epfdTimeout_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpfdTimeout);
            }
            if (epfdHeartbeatRequest_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpfdHeartbeatRequest);
            }
            if (epfdHeartbeatReply_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpfdHeartbeatReply);
            }
            if (epfdSuspect_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpfdSuspect);
            }
            if (epfdRestore_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(EpfdRestore);
            }
            if (plDeliver_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlDeliver);
            }
            if (plSend_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlSend);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != 0)
            {
                Type = other.Type;
            }
            if (other.MessageUuid.Length != 0)
            {
                MessageUuid = other.MessageUuid;
            }
            if (other.AbstractionId.Length != 0)
            {
                AbstractionId = other.AbstractionId;
            }
            if (other.SystemId.Length != 0)
            {
                SystemId = other.SystemId;
            }
            if (other.networkMessage_ != null)
            {
                if (networkMessage_ == null)
                {
                    networkMessage_ = new global::ConsensusProject.Messages.NetworkMessage();
                }
                NetworkMessage.MergeFrom(other.NetworkMessage);
            }
            if (other.appRegistration_ != null)
            {
                if (appRegistration_ == null)
                {
                    appRegistration_ = new global::ConsensusProject.Messages.AppRegistration();
                }
                AppRegistration.MergeFrom(other.AppRegistration);
            }
            if (other.appPropose_ != null)
            {
                if (appPropose_ == null)
                {
                    appPropose_ = new global::ConsensusProject.Messages.AppPropose();
                }
                AppPropose.MergeFrom(other.AppPropose);
            }
            if (other.appDecide_ != null)
            {
                if (appDecide_ == null)
                {
                    appDecide_ = new global::ConsensusProject.Messages.AppDecide();
                }
                AppDecide.MergeFrom(other.AppDecide);
            }
            if (other.ucDecide_ != null)
            {
                if (ucDecide_ == null)
                {
                    ucDecide_ = new global::ConsensusProject.Messages.UcDecide();
                }
                UcDecide.MergeFrom(other.UcDecide);
            }
            if (other.ucPropose_ != null)
            {
                if (ucPropose_ == null)
                {
                    ucPropose_ = new global::ConsensusProject.Messages.UcPropose();
                }
                UcPropose.MergeFrom(other.UcPropose);
            }
            if (other.epAbort_ != null)
            {
                if (epAbort_ == null)
                {
                    epAbort_ = new global::ConsensusProject.Messages.EpAbort();
                }
                EpAbort.MergeFrom(other.EpAbort);
            }
            if (other.epAborted_ != null)
            {
                if (epAborted_ == null)
                {
                    epAborted_ = new global::ConsensusProject.Messages.EpAborted();
                }
                EpAborted.MergeFrom(other.EpAborted);
            }
            if (other.epAccept_ != null)
            {
                if (epAccept_ == null)
                {
                    epAccept_ = new global::ConsensusProject.Messages.EpAccept_();
                }
                EpAccept.MergeFrom(other.EpAccept);
            }
            if (other.epDecide_ != null)
            {
                if (epDecide_ == null)
                {
                    epDecide_ = new global::ConsensusProject.Messages.EpDecide();
                }
                EpDecide.MergeFrom(other.EpDecide);
            }
            if (other.epDecided_ != null)
            {
                if (epDecided_ == null)
                {
                    epDecided_ = new global::ConsensusProject.Messages.EpDecided_();
                }
                EpDecided.MergeFrom(other.EpDecided);
            }
            if (other.epPropose_ != null)
            {
                if (epPropose_ == null)
                {
                    epPropose_ = new global::ConsensusProject.Messages.EpPropose();
                }
                EpPropose.MergeFrom(other.EpPropose);
            }
            if (other.epRead_ != null)
            {
                if (epRead_ == null)
                {
                    epRead_ = new global::ConsensusProject.Messages.EpRead_();
                }
                EpRead.MergeFrom(other.EpRead);
            }
            if (other.epState_ != null)
            {
                if (epState_ == null)
                {
                    epState_ = new global::ConsensusProject.Messages.EpState_();
                }
                EpState.MergeFrom(other.EpState);
            }
            if (other.epWrite_ != null)
            {
                if (epWrite_ == null)
                {
                    epWrite_ = new global::ConsensusProject.Messages.EpWrite_();
                }
                EpWrite.MergeFrom(other.EpWrite);
            }
            if (other.ecNack_ != null)
            {
                if (ecNack_ == null)
                {
                    ecNack_ = new global::ConsensusProject.Messages.EcNack_();
                }
                EcNack.MergeFrom(other.EcNack);
            }
            if (other.ecNewEpoch_ != null)
            {
                if (ecNewEpoch_ == null)
                {
                    ecNewEpoch_ = new global::ConsensusProject.Messages.EcNewEpoch_();
                }
                EcNewEpoch.MergeFrom(other.EcNewEpoch);
            }
            if (other.ecStartEpoch_ != null)
            {
                if (ecStartEpoch_ == null)
                {
                    ecStartEpoch_ = new global::ConsensusProject.Messages.EcStartEpoch();
                }
                EcStartEpoch.MergeFrom(other.EcStartEpoch);
            }
            if (other.bebBroadcast_ != null)
            {
                if (bebBroadcast_ == null)
                {
                    bebBroadcast_ = new global::ConsensusProject.Messages.BebBroadcast();
                }
                BebBroadcast.MergeFrom(other.BebBroadcast);
            }
            if (other.bebDeliver_ != null)
            {
                if (bebDeliver_ == null)
                {
                    bebDeliver_ = new global::ConsensusProject.Messages.BebDeliver();
                }
                BebDeliver.MergeFrom(other.BebDeliver);
            }
            if (other.eldTimeout_ != null)
            {
                if (eldTimeout_ == null)
                {
                    eldTimeout_ = new global::ConsensusProject.Messages.EldTimeout();
                }
                EldTimeout.MergeFrom(other.EldTimeout);
            }
            if (other.eldTrust_ != null)
            {
                if (eldTrust_ == null)
                {
                    eldTrust_ = new global::ConsensusProject.Messages.EldTrust();
                }
                EldTrust.MergeFrom(other.EldTrust);
            }
            if (other.epfdTimeout_ != null)
            {
                if (epfdTimeout_ == null)
                {
                    epfdTimeout_ = new global::ConsensusProject.Messages.EpfdTimeout();
                }
                EpfdTimeout.MergeFrom(other.EpfdTimeout);
            }
            if (other.epfdHeartbeatRequest_ != null)
            {
                if (epfdHeartbeatRequest_ == null)
                {
                    epfdHeartbeatRequest_ = new global::ConsensusProject.Messages.EpfdHeartbeatRequest_();
                }
                EpfdHeartbeatRequest.MergeFrom(other.EpfdHeartbeatRequest);
            }
            if (other.epfdHeartbeatReply_ != null)
            {
                if (epfdHeartbeatReply_ == null)
                {
                    epfdHeartbeatReply_ = new global::ConsensusProject.Messages.EpfdHeartbeatReply_();
                }
                EpfdHeartbeatReply.MergeFrom(other.EpfdHeartbeatReply);
            }
            if (other.epfdSuspect_ != null)
            {
                if (epfdSuspect_ == null)
                {
                    epfdSuspect_ = new global::ConsensusProject.Messages.EpfdSuspect();
                }
                EpfdSuspect.MergeFrom(other.EpfdSuspect);
            }
            if (other.epfdRestore_ != null)
            {
                if (epfdRestore_ == null)
                {
                    epfdRestore_ = new global::ConsensusProject.Messages.EpfdRestore();
                }
                EpfdRestore.MergeFrom(other.EpfdRestore);
            }
            if (other.plDeliver_ != null)
            {
                if (plDeliver_ == null)
                {
                    plDeliver_ = new global::ConsensusProject.Messages.PlDeliver();
                }
                PlDeliver.MergeFrom(other.PlDeliver);
            }
            if (other.plSend_ != null)
            {
                if (plSend_ == null)
                {
                    plSend_ = new global::ConsensusProject.Messages.PlSend();
                }
                PlSend.MergeFrom(other.PlSend);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            type_ = (global::ConsensusProject.Messages.Message.Types.Type)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            MessageUuid = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            AbstractionId = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            SystemId = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            if (networkMessage_ == null)
                            {
                                networkMessage_ = new global::ConsensusProject.Messages.NetworkMessage();
                            }
                            input.ReadMessage(networkMessage_);
                            break;
                        }
                    case 50:
                        {
                            if (appRegistration_ == null)
                            {
                                appRegistration_ = new global::ConsensusProject.Messages.AppRegistration();
                            }
                            input.ReadMessage(appRegistration_);
                            break;
                        }
                    case 58:
                        {
                            if (appPropose_ == null)
                            {
                                appPropose_ = new global::ConsensusProject.Messages.AppPropose();
                            }
                            input.ReadMessage(appPropose_);
                            break;
                        }
                    case 66:
                        {
                            if (appDecide_ == null)
                            {
                                appDecide_ = new global::ConsensusProject.Messages.AppDecide();
                            }
                            input.ReadMessage(appDecide_);
                            break;
                        }
                    case 82:
                        {
                            if (ucDecide_ == null)
                            {
                                ucDecide_ = new global::ConsensusProject.Messages.UcDecide();
                            }
                            input.ReadMessage(ucDecide_);
                            break;
                        }
                    case 90:
                        {
                            if (ucPropose_ == null)
                            {
                                ucPropose_ = new global::ConsensusProject.Messages.UcPropose();
                            }
                            input.ReadMessage(ucPropose_);
                            break;
                        }
                    case 162:
                        {
                            if (epAbort_ == null)
                            {
                                epAbort_ = new global::ConsensusProject.Messages.EpAbort();
                            }
                            input.ReadMessage(epAbort_);
                            break;
                        }
                    case 170:
                        {
                            if (epAborted_ == null)
                            {
                                epAborted_ = new global::ConsensusProject.Messages.EpAborted();
                            }
                            input.ReadMessage(epAborted_);
                            break;
                        }
                    case 178:
                        {
                            if (epAccept_ == null)
                            {
                                epAccept_ = new global::ConsensusProject.Messages.EpAccept_();
                            }
                            input.ReadMessage(epAccept_);
                            break;
                        }
                    case 186:
                        {
                            if (epDecide_ == null)
                            {
                                epDecide_ = new global::ConsensusProject.Messages.EpDecide();
                            }
                            input.ReadMessage(epDecide_);
                            break;
                        }
                    case 194:
                        {
                            if (epDecided_ == null)
                            {
                                epDecided_ = new global::ConsensusProject.Messages.EpDecided_();
                            }
                            input.ReadMessage(epDecided_);
                            break;
                        }
                    case 202:
                        {
                            if (epPropose_ == null)
                            {
                                epPropose_ = new global::ConsensusProject.Messages.EpPropose();
                            }
                            input.ReadMessage(epPropose_);
                            break;
                        }
                    case 210:
                        {
                            if (epRead_ == null)
                            {
                                epRead_ = new global::ConsensusProject.Messages.EpRead_();
                            }
                            input.ReadMessage(epRead_);
                            break;
                        }
                    case 218:
                        {
                            if (epState_ == null)
                            {
                                epState_ = new global::ConsensusProject.Messages.EpState_();
                            }
                            input.ReadMessage(epState_);
                            break;
                        }
                    case 226:
                        {
                            if (epWrite_ == null)
                            {
                                epWrite_ = new global::ConsensusProject.Messages.EpWrite_();
                            }
                            input.ReadMessage(epWrite_);
                            break;
                        }
                    case 250:
                        {
                            if (ecNack_ == null)
                            {
                                ecNack_ = new global::ConsensusProject.Messages.EcNack_();
                            }
                            input.ReadMessage(ecNack_);
                            break;
                        }
                    case 258:
                        {
                            if (ecNewEpoch_ == null)
                            {
                                ecNewEpoch_ = new global::ConsensusProject.Messages.EcNewEpoch_();
                            }
                            input.ReadMessage(ecNewEpoch_);
                            break;
                        }
                    case 266:
                        {
                            if (ecStartEpoch_ == null)
                            {
                                ecStartEpoch_ = new global::ConsensusProject.Messages.EcStartEpoch();
                            }
                            input.ReadMessage(ecStartEpoch_);
                            break;
                        }
                    case 322:
                        {
                            if (bebBroadcast_ == null)
                            {
                                bebBroadcast_ = new global::ConsensusProject.Messages.BebBroadcast();
                            }
                            input.ReadMessage(bebBroadcast_);
                            break;
                        }
                    case 330:
                        {
                            if (bebDeliver_ == null)
                            {
                                bebDeliver_ = new global::ConsensusProject.Messages.BebDeliver();
                            }
                            input.ReadMessage(bebDeliver_);
                            break;
                        }
                    case 402:
                        {
                            if (eldTimeout_ == null)
                            {
                                eldTimeout_ = new global::ConsensusProject.Messages.EldTimeout();
                            }
                            input.ReadMessage(eldTimeout_);
                            break;
                        }
                    case 410:
                        {
                            if (eldTrust_ == null)
                            {
                                eldTrust_ = new global::ConsensusProject.Messages.EldTrust();
                            }
                            input.ReadMessage(eldTrust_);
                            break;
                        }
                    case 482:
                        {
                            if (epfdTimeout_ == null)
                            {
                                epfdTimeout_ = new global::ConsensusProject.Messages.EpfdTimeout();
                            }
                            input.ReadMessage(epfdTimeout_);
                            break;
                        }
                    case 490:
                        {
                            if (epfdHeartbeatRequest_ == null)
                            {
                                epfdHeartbeatRequest_ = new global::ConsensusProject.Messages.EpfdHeartbeatRequest_();
                            }
                            input.ReadMessage(epfdHeartbeatRequest_);
                            break;
                        }
                    case 498:
                        {
                            if (epfdHeartbeatReply_ == null)
                            {
                                epfdHeartbeatReply_ = new global::ConsensusProject.Messages.EpfdHeartbeatReply_();
                            }
                            input.ReadMessage(epfdHeartbeatReply_);
                            break;
                        }
                    case 506:
                        {
                            if (epfdSuspect_ == null)
                            {
                                epfdSuspect_ = new global::ConsensusProject.Messages.EpfdSuspect();
                            }
                            input.ReadMessage(epfdSuspect_);
                            break;
                        }
                    case 514:
                        {
                            if (epfdRestore_ == null)
                            {
                                epfdRestore_ = new global::ConsensusProject.Messages.EpfdRestore();
                            }
                            input.ReadMessage(epfdRestore_);
                            break;
                        }
                    case 562:
                        {
                            if (plDeliver_ == null)
                            {
                                plDeliver_ = new global::ConsensusProject.Messages.PlDeliver();
                            }
                            input.ReadMessage(plDeliver_);
                            break;
                        }
                    case 570:
                        {
                            if (plSend_ == null)
                            {
                                plSend_ = new global::ConsensusProject.Messages.PlSend();
                            }
                            input.ReadMessage(plSend_);
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Message message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum Type
            {
                [pbr::OriginalName("NETWORK_MESSAGE")] NetworkMessage = 0,
                [pbr::OriginalName("APP_REGISTRATION")] AppRegistration = 5,
                [pbr::OriginalName("APP_PROPOSE")] AppPropose = 6,
                [pbr::OriginalName("APP_DECIDE")] AppDecide = 7,
                [pbr::OriginalName("UC_DECIDE")] UcDecide = 10,
                [pbr::OriginalName("UC_PROPOSE")] UcPropose = 11,
                [pbr::OriginalName("EP_ABORT")] EpAbort = 20,
                [pbr::OriginalName("EP_ABORTED")] EpAborted = 21,
                [pbr::OriginalName("EP_ACCEPT_")] EpAccept = 22,
                [pbr::OriginalName("EP_DECIDE")] EpDecide = 23,
                [pbr::OriginalName("EP_DECIDED_")] EpDecided = 24,
                [pbr::OriginalName("EP_PROPOSE")] EpPropose = 25,
                [pbr::OriginalName("EP_READ_")] EpRead = 26,
                [pbr::OriginalName("EP_STATE_")] EpState = 27,
                [pbr::OriginalName("EP_WRITE_")] EpWrite = 28,
                [pbr::OriginalName("EC_NACK_")] EcNack = 30,
                [pbr::OriginalName("EC_NEW_EPOCH_")] EcNewEpoch = 31,
                [pbr::OriginalName("EC_START_EPOCH")] EcStartEpoch = 32,
                [pbr::OriginalName("BEB_BROADCAST")] BebBroadcast = 40,
                [pbr::OriginalName("BEB_DELIVER")] BebDeliver = 41,
                [pbr::OriginalName("ELD_TIMEOUT")] EldTimeout = 50,
                [pbr::OriginalName("ELD_TRUST")] EldTrust = 51,
                [pbr::OriginalName("EPFD_TIMEOUT")] EpfdTimeout = 60,
                [pbr::OriginalName("EPFD_HEARTBEAT_REQUEST")] EpfdHeartbeatRequest = 61,
                [pbr::OriginalName("EPFD_HEARTBEAT_REPLY")] EpfdHeartbeatReply = 62,
                [pbr::OriginalName("EPFD_SUSPECT")] EpfdSuspect = 63,
                [pbr::OriginalName("EPFD_RESTORE")] EpfdRestore = 64,
                [pbr::OriginalName("PL_DELIVER")] PlDeliver = 70,
                [pbr::OriginalName("PL_SEND")] PlSend = 71,
            }

        }
        #endregion

    }

    #endregion

}

#endregion Designer generated code
